/*
* Prefixed by https://autoprefixer.github.io
* PostCSS: v7.0.29,
* Autoprefixer: v9.7.6
* Browsers: last 4 version
*/

/*a {
  color: #0254EB
}
a:visited {
  color: #0254EB
}
a.morelink {
  text-decoration:none;
  outline: none;
}
.morecontent span {
  display: none;
}
.comment {
  width: 400px;
  background-color: #f0f0f0;
  margin: 10px;
}*/

/*li {
  margin-bottom: 20px;
  margin-left: 10px;
  margin-right: 20px;
  background-color: #dddddd;
  padding: 10px;
  list-style-type:none;
}*/

/*.flex-container {
  /* We first create a flex layout context 
  display: flex;
  /* Then we define the flow direction 
     and if we allow the items to wrap 
   * Remember this is the same as:
   * flex-direction: row;
   * flex-wrap: wrap;
   
}*/

/*.flex-item {
  max-height: 500px;
  position: relative;
  overflow: hidden;
}*/

/*.flex-item .read-more {
  position: absolute; 
  bottom: 0; 
  left: 0;
  width: 100%; 
  text-align: center; 
  margin: 0; padding: 30px 0; 
  background-color: #dddddd;*/
  
  /* "transparent" only works here because == rgba(0,0,0,0) */
  /*background-image: linear-gradient(to bottom, transparent, black);
}*/

/* On screens that are 992px wide or less, go from four columns to two columns */
/*@media screen and (max-width: 992px) {
  .column {
    flex: 100%;
  }
}*/

.flex-container {
    list-style: none;
    margin: 0;
    padding: 0; /* NEW */
    display: -webkit-box;
    display: -webkit-flex;
    display: -moz-flex;
    display: -ms-flexbox;
    display: -o-flex;
    display: flex; /* NEW */
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
}

ul {

  -ms-box-orient: horizontal;
  display: -webkit-box;
  display: -ms-flexbox;
  display: -moz-flex;
  display: flex; 
  -webkit-box-pack: justify; 
      -ms-flex-pack: justify; 
          justify-content: space-between; 
   padding: 0;

   li {
      padding: 0;
   }
}

/* On screens that are 600px wide or less, make the columns stack on top of each other instead of next to each other */
@media screen and (max-width: 600px) {
  #events-past {
    -webkit-box-orient: vertical;
    -webkit-box-direction: column;
        -ms-flex-direction: column;
            flex-direction: column;
  }
}

@media screen and (min-width: 1100px) {
  .column {
    -webkit-box-flex: 25%;
        -ms-flex: 25%;
            flex: 25%;
  }
}

#events-past, #events-upcoming{
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  flex-direction: column;
}

.sidebar-box {
  max-height: 350px;
    display: -webkit-box;
    display: -webkit-flex;
    display: -moz-flex;
    display: -ms-flexbox;
    display: -o-flex;
    display: flex;
-webkit-box-flex: 40%;
-moz-flex: 1;
flex: 1;
    -ms-flex: 40%;

        flex: 40%;
  /*max-height: 350px;*/
  position: relative;
  overflow: hidden;
    margin-bottom: 20px;
  margin-left: 10px;
  margin-right: 20px;
  background: -webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0.7)), to(rgba(0, 0, 0, 0.7))) !important;
  background: -o-linear-gradient(rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7)) !important;
  background: linear-gradient(rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7)) !important;
  padding: 10px;
  list-style-type:none;
  border: 10px solid #eb670f;
}

.sidebar-box .read-more { 
      /*height: 1000vh;*/
  position: absolute; 
  bottom: 0; 
  left: 0;
  text-align: center; 
  margin: 0; padding: 10px 0; 
  
  /* "transparent" only works here because == rgba(0,0,0,0) */
  /*background-image: linear-gradient(to bottom, transparent, black);*/
  background-color: #e24104 !important;
}

a {
  color: #ffffff !important;
}

html,
body {
  background: -webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0.5)), to(rgba(0, 0, 0, 0.5))), url("../img/lib.jpg");
  background: -o-linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url("../img/lib.jpg");
  background: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url("../img/lib.jpg");
  background-repeat: none;
  background-position: left;
  background-attachment: fixed;
  color: #ffffff !important;
}

.cover-heading, h1, h2, h3, label {
  font-family: "Snippet-Regular" !important;
}

@font-face {
  font-family: "Snippet-Regular";
  src: url("../fonts/Snippet-Regular.ttf") format("truetype");
}

/*
 * Header
 */
.masthead {
  margin-bottom: 2rem;
}

.masthead-brand {
  margin-bottom: 0;
}

.nav-masthead .nav-link {
  padding: .25rem 0;
  font-weight: 700;
  color: rgba(255, 255, 255, .5);
  background-color: transparent;
  border-bottom: .25rem solid transparent;
}

.nav-masthead .nav-link:hover,
.nav-masthead .nav-link:focus {
  border-bottom-color: rgba(255, 255, 255, .25);
}

.nav-masthead .nav-link + .nav-link {
  margin-left: 1rem;
}

.nav-masthead .active {
  color: #fff;
  border-bottom-color: #fff;
}

@media (min-width: 48em) {
  .masthead-brand {
    float: left;
  }
  .nav-masthead {
    float: center;
  }
}

h1 {
  margin-top: 20px !important;
  margin-bottom: 20px !important;
}

.collapse a:link, a:visited {
  text-decoration: underline;
  color: #eb670f !important;
}
